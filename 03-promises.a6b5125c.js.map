{"mappings":"AAAyBA,SAASC,cAAc,SAE/BC,iBAAiB,SAElC,SAAsBC,GACpBA,EAAEC,iBAEF,IAKuBC,EAAUC,EALDC,EAAAJ,EAAEK,cAA1BC,EAAwBF,EAAxBD,MAAOI,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OACjBC,EAAaH,EAAMI,MACnBC,EAAYJ,EAAKG,MACRF,EAAOE,OAEGR,EAYXO,EAZqBN,EAYTQ,EAXjB,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEvCJ,EAAQ,CAAEX,WAAUC,UAErBW,EAAO,CAAEZ,WAAUC,S,GAAYA,E,KAMhCe,MAAK,SAAAC,G,IAAGjB,EAAQiB,EAARjB,SAAUC,EAAKgB,EAALhB,MACjBiB,QAAQC,IAAI,uBAAwCC,OAAfpB,EAAS,QAAYoB,OAANnB,EAAM,M,IAE3DoB,OAAM,SAAAJ,G,IAAGjB,EAAQiB,EAARjB,SAAUC,EAAKgB,EAALhB,MAClBiB,QAAQC,IAAI,sBAAqCC,OAAfpB,EAAS,QAAYoB,OAANnB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["const promiseGenerator = document.querySelector('.form')\n\npromiseGenerator.addEventListener('input', onFormSubmit)\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  const { delay, step, amount } = e.currentTarget;\n  let firstDelay = delay.value;\n  let delayStep = step.value;\n  let Amount = amount.value;\n\n  function createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n     resolve({ position, delay })\n  } else {\n    reject({ position, delay })}}, delay)\n     \n  })\n  };\n  \ncreatePromise(firstDelay, delayStep)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n};\n\n\n\n"],"names":["document","querySelector","addEventListener","e","preventDefault","position","delay","_currentTarget","currentTarget","delay1","step","amount","firstDelay","value","delayStep","Promise","resolve","reject","setTimeout","Math","random","then","param","console","log","concat","catch"],"version":3,"file":"03-promises.a6b5125c.js.map"}