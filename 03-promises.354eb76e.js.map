{"mappings":"AAAyBA,SAASC,cAAc,SAE/BC,iBAAiB,SAElC,SAAsBC,GACpBA,EAAEC,iBAEF,MAAQC,MAAAC,EAAKC,KAAEA,EAAIC,OAAEA,GAAWL,EAAEM,cAClC,IAAIC,EAAaJ,EAAMK,MACnBC,EAAYL,EAAKI,MACRH,EAAOG,OAEGE,EAYXH,EAZqBL,EAYTO,EAXjB,IAAIE,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEvCJ,EAAQ,C,SAAEF,E,MAAUR,IAErBW,EAAO,C,SAAEH,E,MAAUR,GAAQ,GAAIA,EAAM,KAMtCe,MAAK,EAACP,SAAEA,EAAQR,MAAEA,MACjBgB,QAAQC,IAAI,uBAAqBT,QAAiBR,MAAU,IAE7DkB,OAAM,EAACV,SAAEA,EAAQR,MAAEA,MAClBgB,QAAQC,IAAI,sBAAoBT,QAAeR,MAAU,IAjB3D,IAAuBQ,EAAUR,C","sources":["src/js/03-promises.js"],"sourcesContent":["const promiseGenerator = document.querySelector('.form')\n\npromiseGenerator.addEventListener('input', onFormSubmit)\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  const { delay, step, amount } = e.currentTarget;\n  let firstDelay = delay.value;\n  let delayStep = step.value;\n  let Amount = amount.value;\n\n  function createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n     resolve({ position, delay })\n  } else {\n    reject({ position, delay })}}, delay)\n     \n  })\n  };\n  \ncreatePromise(firstDelay, delayStep)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n};\n\n\n\n"],"names":["document","querySelector","addEventListener","e","preventDefault","delay","delay1","step","amount","currentTarget","firstDelay","value","delayStep","position","Promise","resolve","reject","setTimeout","Math","random","then","console","log","catch"],"version":3,"file":"03-promises.354eb76e.js.map"}