{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEAC,EAAAF,GAASG,OAAOC,KAAK,CACnBC,SAAU,YACVC,kBAAmB,YACnBC,qBAAsB,IACtBC,QAAS,MAIX,IAAMC,EAAmBC,SAASC,cAAc,SAIhD,SAASC,EAAcP,EAAUQ,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEV,WAAUQ,UAEpBG,EAAO,CAAEX,WAAUQ,S,GAEpBA,E,IAXPJ,EAAiBY,iBAAiB,UAelC,SAAsBC,GACpBA,EAAEC,iBAEF,IAAgCC,EAAAF,EAAEG,cAA1BC,EAAwBF,EAAxBX,MAAOc,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OACjBC,EAAaC,OAAOJ,EAAMK,OAC1BC,EAAYF,OAAOH,EAAKI,OACxBE,EAAaH,OAAOF,EAAOG,OAC/BG,QAAQC,IAAIN,GAGZ,IAAK,IAAIO,EAAI,EAAGA,GAAKH,EAAYG,GAAK,EAEpCxB,EAAcwB,EAAGP,GAClBQ,MAAK,SAAAC,G,IAAGjC,EAAQiC,EAARjC,SAAUQ,EAAKyB,EAALzB,MACjBX,EAAAF,GAASG,OAAOoC,QAAQ,uBAAwCC,OAAfnC,EAAS,QAAYmC,OAAN3B,EAAM,M,IAEvE4B,OAAM,SAAAH,G,IAAGjC,EAAQiC,EAARjC,SAAUQ,EAAKyB,EAALzB,MAClBX,EAAAF,GAASG,OAAOuC,QAAQ,sBAAqCF,OAAfnC,EAAS,QAAYmC,OAAN3B,EAAM,M,IAGnEgB,GAAcG,EAEhBvB,EAAiBkC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nNotiflix.Notify.init({\n  position: 'top-right',\n  cssAnimationStyle: 'from-left',\n  cssAnimationDuration: 700,\n  timeout: 3000,\n}\n);\n\nconst promiseGenerator = document.querySelector('.form')\n\npromiseGenerator.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay })\n      }\n    }, delay);\n  });\n  };\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  const { delay, step, amount } = e.currentTarget;\n  let firstDelay = Number(delay.value);\n  let delayStep = Number(step.value);\n  let formAmount = Number(amount.value);\n  console.log(firstDelay)\n \n\n  for (let i = 1; i <= formAmount; i += 1){\n    \n    createPromise(i, firstDelay)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    \n    firstDelay += delayStep;\n  };\n  promiseGenerator.reset();\n}\n\n \n\n\n\n"],"names":["$6JpON","parcelRequire","$parcel$interopDefault","Notify","init","position","cssAnimationStyle","cssAnimationDuration","timeout","$ce04d3a99e08e73b$var$promiseGenerator","document","querySelector","$ce04d3a99e08e73b$var$createPromise","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","_currentTarget","currentTarget","delay1","step","amount","firstDelay","Number","value","delayStep","formAmount","console","log","i","then","param","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.1b40b422.js.map"}