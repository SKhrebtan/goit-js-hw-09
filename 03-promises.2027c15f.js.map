{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEAC,EAAAF,GAASG,OAAOC,KAAK,CACnBC,SAAU,YACVC,kBAAmB,YACnBC,qBAAsB,IACtBC,QAAS,MAIX,MAAMC,EAAmBC,SAASC,cAAc,SAIhD,SAASC,EAAcP,EAAUQ,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEV,E,MAAUQ,IAEpBG,EAAO,C,SAAEX,E,MAAUQ,GAAQ,GAE5BA,EAAM,G,CAXbJ,EAAiBY,iBAAiB,UAelC,SAAsBC,GACpBA,EAAEC,iBAEF,MAAQV,MAAAW,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAEK,cAClC,IAAIC,EAAaC,OAAOL,EAAMM,OAC1BC,EAAYF,OAAOJ,EAAKK,OACxBE,EAAaH,OAAOH,EAAOI,OAC/BG,QAAQC,IAAIN,GAGZ,IAAK,IAAIO,EAAI,EAAGA,GAAKH,EAAYG,GAAK,EAEpCvB,EAAcuB,EAAGP,GAClBQ,MAAK,EAAC/B,SAAEA,EAAQQ,MAAEA,MACjBX,EAAAF,GAASG,OAAOkC,QAAQ,uBAAqBhC,QAAiBQ,MAAU,IAEzEyB,OAAM,EAACjC,SAAEA,EAAQQ,MAAEA,MAClBX,EAAAF,GAASG,OAAOoC,QAAQ,sBAAoBlC,QAAeQ,MAAU,IAGrEe,GAAcG,EAEhBtB,EAAiB+B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nNotiflix.Notify.init({\n  position: 'top-right',\n  cssAnimationStyle: 'from-left',\n  cssAnimationDuration: 700,\n  timeout: 3000,\n}\n);\n\nconst promiseGenerator = document.querySelector('.form')\n\npromiseGenerator.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay })\n      }\n    }, delay);\n  });\n  };\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  const { delay, step, amount } = e.currentTarget;\n  let firstDelay = Number(delay.value);\n  let delayStep = Number(step.value);\n  let formAmount = Number(amount.value);\n  console.log(firstDelay)\n \n\n  for (let i = 1; i <= formAmount; i += 1){\n    \n    createPromise(i, firstDelay)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    \n    firstDelay += delayStep;\n  };\n  promiseGenerator.reset();\n}\n\n \n\n\n\n"],"names":["$7Y9D8","parcelRequire","$parcel$interopDefault","Notify","init","position","cssAnimationStyle","cssAnimationDuration","timeout","$47d4ff9957288465$var$promiseGenerator","document","querySelector","$47d4ff9957288465$var$createPromise","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","delay1","step","amount","currentTarget","firstDelay","Number","value","delayStep","formAmount","console","log","i","then","success","catch","failure","reset"],"version":3,"file":"03-promises.2027c15f.js.map"}