{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEAC,EAAAF,GAASG,OAAOC,KAAK,CACnBC,SAAU,YACVC,kBAAmB,YACnBC,qBAAsB,IACtBC,QAAS,MAIX,IAgBQC,EACAC,EAjBFC,EAAmBC,SAASC,cAAc,SAC1CC,EAAe,gBACjBC,EAAW,GACiBC,EAAAL,EAAiBM,SAAzCC,EAAwBF,EAAxBG,MAAOC,EAAiBJ,EAAjBK,KAAMC,EAAWN,EAAXO,OAsBrB,SAASC,EAAcnB,EAAUoB,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEtB,WAAUc,MAAAM,IAEpBG,EAAO,CAAEvB,WAAUc,MAAAM,G,GAEpBA,E,IA7BPd,EAAiBsB,iBAAiB,UAiClC,SAAsBC,GACpBA,EAAEC,iBAEF,IAAgCC,EAAAF,EAAEG,cAA1BC,EAAwBF,EAAxBjB,MAAOoB,EAAiBH,EAAjBf,KAAMmB,EAAWJ,EAAXb,OACjBkB,EAAaC,OAAOJ,EAAMK,OAC1BC,EAAYF,OAAOH,EAAKI,OACxBE,EAAaH,OAAOF,EAAOG,OAC/BG,QAAQC,IAAIN,GAGZ,IAAK,IAAIO,EAAI,EAAGA,GAAKH,EAAYG,GAAK,EAEpCxB,EAAcwB,EAAGP,GAClBQ,MAAK,SAAAC,G,IAAG7C,EAAQ6C,EAAR7C,SAAU8C,EAAKD,EAAL/B,MACjBjB,EAAAF,GAASG,OAAOiD,QAAQ,uBAAwCC,OAAfhD,EAAS,QAAYgD,OAANF,EAAM,M,IAEvEG,OAAM,SAAAJ,G,IAAG7C,EAAQ6C,EAAR7C,SAAUkD,EAAKL,EAAL/B,MAClBjB,EAAAF,GAASG,OAAOqD,QAAQ,sBAAqCH,OAAfhD,EAAS,QAAYgD,OAANE,EAAM,M,IAGnEd,GAAcG,EAEhBjC,EAAiB8C,QACjBC,aAAaC,WAAW7C,GACxBC,EAAW,E,IAxDbJ,EAAiBsB,iBAAiB,SAIlC,SAAqBC,GACnBnB,EAASmB,EAAE0B,OAAOC,MAAQ3B,EAAE0B,OAAOjB,MACnCe,aAAaI,QAAQhD,EAAciD,KAAKC,UAAUjD,G,IAI5CN,EAAgBiD,aAAaO,QAAQnD,GACrCJ,EAAiBqD,KAAKG,MAAMzD,GAC5BA,IACFS,EAAMyB,MAAQjC,EAAeS,OAAS,GACtCC,EAAKuB,MAAQjC,EAAeW,MAAQ,GACpCC,EAAOqB,MAAQjC,EAAea,QAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nNotiflix.Notify.init({\n  position: 'top-right',\n  cssAnimationStyle: 'from-left',\n  cssAnimationDuration: 700,\n  timeout: 3000,\n}\n);\n\nconst promiseGenerator = document.querySelector('.form');\nconst FORMDATA_KEY = \"feedback-form\"; \nlet formData = {};\nconst { delay, step, amount } = promiseGenerator.elements;\n\npromiseGenerator.addEventListener('submit', onFormSubmit);\npromiseGenerator.addEventListener('input', onFormInput);\n\nonBlankReload();\n\nfunction onFormInput(e) {\n  formData[e.target.name] = e.target.value;\n  localStorage.setItem(FORMDATA_KEY, JSON.stringify(formData));\n}\n\nfunction onBlankReload() {\n  const savedSettings = localStorage.getItem(FORMDATA_KEY);\n  const parsedSettings = JSON.parse(savedSettings);\n    if (savedSettings) {\n      delay.value = parsedSettings.delay || '';\n      step.value = parsedSettings.step || '';\n      amount.value = parsedSettings.amount || '';\n         }\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay })\n      }\n    }, delay);\n  });\n  };\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  const { delay, step, amount } = e.currentTarget;\n  let firstDelay = Number(delay.value);\n  let delayStep = Number(step.value);\n  let formAmount = Number(amount.value);\n  console.log(firstDelay)\n \n\n  for (let i = 1; i <= formAmount; i += 1){\n    \n    createPromise(i, firstDelay)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    \n    firstDelay += delayStep;\n  };\n  promiseGenerator.reset();\n  localStorage.removeItem(FORMDATA_KEY);\n  formData = {};\n}\n\n \n\n\n\n"],"names":["$6JpON","parcelRequire","$parcel$interopDefault","Notify","init","position","cssAnimationStyle","cssAnimationDuration","timeout","savedSettings","parsedSettings","$ce04d3a99e08e73b$var$promiseGenerator","document","querySelector","$ce04d3a99e08e73b$var$FORMDATA_KEY","$ce04d3a99e08e73b$var$formData","$ce04d3a99e08e73b$var$_elements","elements","$ce04d3a99e08e73b$var$delay","delay","$ce04d3a99e08e73b$var$step","step","$ce04d3a99e08e73b$var$amount","amount","$ce04d3a99e08e73b$var$createPromise","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","_currentTarget","currentTarget","delay2","step1","amount1","firstDelay","Number","value","delayStep","formAmount","console","log","i","then","param","delay3","success","concat","catch","delay4","failure","reset","localStorage","removeItem","target","name","setItem","JSON","stringify","getItem","parse"],"version":3,"file":"03-promises.423e4242.js.map"}